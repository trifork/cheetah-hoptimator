# A default model with only built-in adapters

version: 1.0
defaultSchema: DATAGEN
schemas:
  - name: DATAGEN
    type: custom
    factory: com.linkedin.hoptimator.catalog.builtin.DatagenSchemaFactory

  - name: RAWKAFKA
    type: custom
    factory: com.linkedin.hoptimator.catalog.kafka.RawKafkaSchemaFactory
    operand:
      clientConfig:
        bootstrap.servers: kafka:19092
        group.id: hoptimator-test
        auto.offset.reset: earliest
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: OAUTHBEARER
        #The OAuthBearerLoginCallbackHandler is used on the client side to retrieve a JWT token from the OAuth 2.0 token endpoint.
        #sasl.login.callback.handler.class: org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
        sasl.login.callback.handler.class: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
        #sasl.login.callback.handler.class: org.apache.flink.kafka.shaded.org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
        sasl.oauthbearer.token.endpoint.url: http://keycloak:1852/realms/local-development/protocol/openid-connect/token
        #sasl.jaas.config is handled by ENV: KAFKA_SASL_JAAS_CONFIG
        #sasl.jaas.config: 'org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required clientId="default-access" clientSecret="default-access-secret" scope="kafka";'
        #ssl.truststore.password is handled by ENV: KAFKA_SASL_TRUSTSTORE_PASSWORD

  - name: INSECURERAWKAFKA
    type: custom
    factory: com.linkedin.hoptimator.catalog.kafka.RawKafkaSchemaFactory
    operand:
      clientConfig:
        bootstrap.servers: kafka:19093
        group.id: hoptimator-test
        auto.offset.reset: earliest
        security.protocol: PLAINTEXT
